{
  "$schema": "https://json.schemastore.org/tsconfig",
  "display": "Recommended",
  
  "compilerOptions": {
    /** Strict mode offers the most safety for your application */
    "strict": true,
    
    /** These three options are to improve compatability with the js + babel ecosystem */
    "isolatedModules": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    
    /** Improves `tsc` launch speed in favour of some accuracy in your @types **/
    "skipLibCheck": true,
    
    /** 
      Avoids polluting the global scope from all available @types. This means
      if you want to have global types (e.g. maybe for your test runner) then
      you need to override this with something like "types": ["jest"]
    */
    "types": [],

    /** This is an easy win when the operating system you are working on is different to the production environment */,
    "forceConsistentCasingInFileNames": true,

    /** Tighter compatability with the standards */
    "useDefineForClassFields": true,

    /** Emit .d.ts files */
    "declaration": true
  },
  "exclude": ["node_modules", "babel.config.js", "metro.config.js", "jest.config.js"]
}
